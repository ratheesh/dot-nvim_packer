-- Copyright (c) 2022 Ratheesh <ratheeshreddy@gmail.com>
-- License: MIT
-- Color Configuration

_G.colors = {
	red = "#BF616A", teal = "#97B7D7", one_bg = "#373D49", lightbg = "#3B4252", blue = "#81A1C1",
	cyan = "#5E81AC", black = "#1E2430", orange = "#D08770", one_bg2 = "#434C5E", foreground = "#EEEEEE",
	grey = "#4B515D", green = "#A3BE8C", purple = "#8FBCBB", one_bg3 = "#4C566A", light_grey = "#646A76",
	line = "#3A404C", white = "#D8DEE9", yellow = "#EBCB8B", lightbg2 = "#393F4B", dark_purple = "#B48EAD",
	pink = "#D57780", black2 = "#343A46", grey_fg = "#606672", baby_pink = "#DE878F", darker_black = "#2A303C",
}

vim.g.terminal_color_0  = colors.black
vim.g.terminal_color_1  = colors.red
vim.g.terminal_color_2  = colors.green
vim.g.terminal_color_3  = colors.yellow
vim.g.terminal_color_4  = colors.blue
vim.g.terminal_color_5  = colors.dark_purple
vim.g.terminal_color_6  = colors.cyan
vim.g.terminal_color_7  = colors.foreground
vim.g.terminal_color_8  = colors.one_bg3
vim.g.terminal_color_9  = colors.red
vim.g.terminal_color_10 = colors.green
vim.g.terminal_color_11 = colors.yellow
vim.g.terminal_color_12 = colors.blue
vim.g.terminal_color_13 = colors.dark_purple
vim.g.terminal_color_14 = colors.cyan
vim.g.terminal_color_15 = colors.purple

local hl = vim.api.nvim_set_hl
hl(0, "Normal", { fg = colors.foreground, bg = colors.black })
hl(0, "NormalFloat", { fg = colors.foreground, bg = colors.black })
hl(0, "FloatBorder", { fg = colors.lightbg })
hl(0, "Bold", { bold = true })
hl(0, "Debug", { fg = colors.pink })
hl(0, "Directory", { fg = colors.blue })
hl(0, "Error", { fg = colors.black, bg = colors.pink })
hl(0, "ErrorMsg", { fg = colors.pink, bg = colors.black })
hl(0, "Exception", { fg = colors.pink })
hl(0, "FoldColumn", { fg = colors.teal, bg = colors.lightbg })
hl(0, "Folded", { fg = colors.one_bg3, bg = colors.lightbg })
hl(0, "IncSearch", { fg = colors.dark_purple })
hl(0, "Search", { bg = "#2a655e" })
hl(0, "Macro", { fg = colors.pink })
hl(0, "MatchParen", { bg = colors.lightbg })
hl(0, "ModeMsg", { fg = colors.green })
hl(0, "MoreMsg", { fg = colors.green })
hl(0, "Question", { fg = colors.blue })
hl(0, "Substitute", { fg = colors.lightbg, bg = colors.yellow })
hl(0, "SpecialKey", { fg = colors.one_bg3 })
hl(0, "TooLong", { fg = colors.pink })
hl(0, "Underlined", { fg = colors.pink })
hl(0, "Visual", { bg = colors.one_bg2 })
hl(0, "VisualNOS", { fg = colors.pink })
hl(0, "WarningMsg", { fg = colors.pink })
hl(0, "WildMenu", { fg = colors.pink, bg = colors.yellow })
hl(0, "Title", { fg = colors.blue })
hl(0, "Conceal", { fg = colors.blue, bg = colors.black })
hl(0, "Cursor", { fg = colors.black, bg = colors.white })
hl(0, "NonText", { fg = colors.one_bg3 })
hl(0, "LineNr", { fg = "#a0a0a0", bg = "#343848" })
hl(0, "SignColumn", { fg = colors.one_bg3 })
hl(0, "StatusLineNC", { fg = colors.one_bg3, underline = true })
hl(0, "StatusLine", { fg = colors.one_bg2, underline = true })
hl(0, "VertSplit", { fg = colors.one_bg2 })
-- hl(0, "ColorColumn", { bg = colors.lightbg })
hl(0, "CursorColumn", { bg = colors.lightbg })
hl(0, "CursorLine", { bg = colors.lightbg })
hl(0, "CursorLineNr", { fg = "#ffffff", bg = "#9f268f" })
hl(0, "QuickFixLine", { bg = colors.lightbg })
hl(0, "Pmenu", { fg = colors.one_bg, bg = colors.black2 })
hl(0, "PmenuSbar", { fg = colors.one_bg2 })
hl(0, "PmenuSel", { fg = colors.teal, bg = colors.lightbg })
hl(0, "PmenuThumb", { fg = colors.blue })
hl(0, "TabLine", { fg = colors.one_bg3, bg = colors.lightbg })
hl(0, "TabLineFill", { fg = colors.one_bg3, bg = colors.lightbg })
hl(0, "TabLineSel", { fg = colors.green, bg = colors.lightbg })

-- Standard syntax highlighting
hl(0, "Boolean",      { fg = colors.orange                      })
hl(0, "Character",    { fg = colors.pink                        })
hl(0, "Comment",      { fg = "#909090",     italic = true       })
hl(0, "Conditional",  { fg = colors.green                       })
hl(0, "Constant",     { fg = colors.cyan                        })
hl(0, "Define",       { fg = colors.dark_purple                 })
hl(0, "Delimiter",    { fg = colors.dark_purple                 })
hl(0, "Float",        { fg = colors.orange                      })
hl(0, "Function",     { fg = colors.yellow                      })
hl(0, "Identifier",   { fg = colors.teal                        })
hl(0, "Include",      { fg = colors.blue                        })
hl(0, "Keyword",      { fg = colors.green                       })
hl(0, "Label",        { fg = colors.yellow                      })
hl(0, "Number",       { fg = colors.orange                      })
hl(0, "Operator",     { fg = colors.white                       })
hl(0, "PreProc",      { fg = colors.yellow                      })
hl(0, "Repeat",       { fg = colors.cyan                        })
hl(0, "Special",      { fg = colors.orange                      })
hl(0, "SpecialChar",  { fg = colors.dark_purple                 })
hl(0, "Statement",    { fg = colors.green                       })
hl(0, "StorageClass", { fg = colors.yellow                      })
hl(0, "String",       { fg = "#7a8a80"                          })
hl(0, "Structure",    { fg = colors.dark_purple                 })
hl(0, "Tag",          { fg = colors.yellow                      })
hl(0, "Todo",         { fg = colors.yellow, bg = colors.lightbg })
hl(0, "Type",         { fg = colors.yellow                      })
hl(0, "Typedef",      { fg = colors.yellow                      })

-- Diff highlighting
hl(0, "DiffAdd",     { fg = colors.green,   bg = colors.lightbg })
hl(0, "DiffChange",  { fg = colors.one_bg3, bg = colors.lightbg })
hl(0, "DiffDelete",  { fg = colors.pink,    bg = colors.lightbg })
hl(0, "DiffText",    { fg = colors.blue,    bg = colors.lightbg })
hl(0, "DiffAdded",   { fg = colors.green,   bg = colors.black   })
hl(0, "DiffFile",    { fg = colors.pink,    bg = colors.black   })
hl(0, "DiffNewFile", { fg = colors.green,   bg = colors.black   })
hl(0, "DiffLine",    { fg = colors.blue,    bg = colors.black   })
hl(0, "DiffRemoved", { fg = colors.pink,    bg = colors.black   })

-- Git highlighting
hl(0, "gitcommitOverflow",      { fg = colors.pink                })
hl(0, "gitcommitSummary",       { fg = colors.green               })
hl(0, "gitcommitComment",       { fg = colors.one_bg3             })
hl(0, "gitcommitUntracked",     { fg = colors.one_bg3             })
hl(0, "gitcommitDiscarded",     { fg = colors.one_bg3             })
hl(0, "gitcommitSelected",      { fg = colors.one_bg3             })
hl(0, "gitcommitHeader",        { fg = colors.dark_purple         })
hl(0, "gitcommitSelectedType",  { fg = colors.blue                })
hl(0, "gitcommitUnmergedType",  { fg = colors.blue                })
hl(0, "gitcommitDiscardedType", { fg = colors.blue                })
hl(0, "gitcommitBranch",        { fg = colors.orange, bold = true })
hl(0, "gitcommitUntrackedFile", { fg = colors.yellow              })
hl(0, "gitcommitUnmergedFile",  { fg = colors.pink,   bold = true })
hl(0, "gitcommitDiscardedFile", { fg = colors.pink,   bold = true })
hl(0, "gitcommitSelectedFile",  { fg = colors.green,  bold = true })

hl(0, "EndOfBuffer",              { fg = colors.black   })
hl(0, "NnnNormal",                { bg = colors.black   })
hl(0, "NvimInternalError",        { fg = colors.red     })
hl(0, "GitSignsAdd",              { fg = colors.blue    })
hl(0, "GitSignsChange",           { fg = colors.grey_fg })
hl(0, "GitSignsModified",         { fg = colors.blue    })
hl(0, "CmpItemAbbr",              { fg = colors.white   })
hl(0, "CmpItemAbbrMatch",         { fg = colors.teal    })
hl(0, "CmpItemAbbrMatchFuzzy",    { fg = colors.teal    })
hl(0, "CmpItemMenu",              { fg = colors.white   })
hl(0, "CmpItemKind",              { fg = colors.teal    })
hl(0, "CmpItemKindText",          { fg = colors.teal    })
hl(0, "CmpItemKindMethod",        { fg = colors.teal    })
hl(0, "CmpItemKindFunction",      { fg = colors.teal    })
hl(0, "CmpItemKindConstructor",   { fg = colors.teal    })
hl(0, "CmpItemKindField",         { fg = colors.teal    })
hl(0, "CmpItemKindVariable",      { fg = colors.teal    })
hl(0, "CmpItemKindClass",         { fg = colors.teal    })
hl(0, "CmpItemKindInterface",     { fg = colors.teal    })
hl(0, "CmpItemKindModule",        { fg = colors.teal    })
hl(0, "CmpItemKindProperty",      { fg = colors.teal    })
hl(0, "CmpItemKindUnit",          { fg = colors.teal    })
hl(0, "CmpItemKindValue",         { fg = colors.teal    })
hl(0, "CmpItemKindEnum",          { fg = colors.teal    })
hl(0, "CmpItemKindKeyword",       { fg = colors.teal    })
hl(0, "CmpItemKindSnippet",       { fg = colors.teal    })
hl(0, "CmpItemKindColor",         { fg = colors.teal    })
hl(0, "CmpItemKindFile",          { fg = colors.teal    })
hl(0, "CmpItemKindReference",     { fg = colors.teal    })
hl(0, "CmpItemKindFolder",        { fg = colors.teal    })
hl(0, "CmpItemKindEnumMember",    { fg = colors.teal    })
hl(0, "CmpItemKindConstant",      { fg = colors.teal    })
hl(0, "CmpItemKindStruct",        { fg = colors.teal    })
hl(0, "CmpItemKindEvent",         { fg = colors.teal    })
hl(0, "CmpItemKindOperator",      { fg = colors.teal    })
hl(0, "CmpItemKindTypeParameter", { fg = colors.teal    })
hl(0, "IndentBlanklineChar",      { fg = colors.line    })
hl(0, "DiagnosticError",          { fg = colors.red     })
hl(0, "DiagnosticWarn",           { fg = colors.yellow  })
hl(0, "DiagnosticInfo",           { fg = colors.green   })
hl(0, "DiagnosticHint",           { fg = colors.purple  })
hl(0, "LspReferenceRead",         { bg = colors.lightbg })
hl(0, "LspReferenceWrite",        { bg = colors.lightbg })
hl(0, "NotifyINFOBorder",         { fg = colors.green   })
hl(0, "NotifyINFOTitle",          { fg = colors.green   })
hl(0, "NotifyINFOIcon",           { fg = colors.green   })
hl(0, "NotifyWARNBorder",         { fg = colors.yellow  })
hl(0, "NotifyWARNTitle",          { fg = colors.yellow  })
hl(0, "NotifyWARNIcon",           { fg = colors.yellow  })
hl(0, "NotifyERRORBorder",        { fg = colors.red     })
hl(0, "NotifyERRORTitle",         { fg = colors.red     })
hl(0, "NotifyERRORIcon",          { fg = colors.red     })
hl(0, "WhichKeyValue",            { fg = colors.purple  })

-- Treesitter highlighting
hl(0, "TSProperty"        ,   { fg="#e1e1e1", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSString"          ,   { fg="#7d8590", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSStringEscape"    ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSNumber"          ,   { fg="#1DAA89", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSKeyword"         ,   { fg="#6272a4", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSFunction"        ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSType"            ,   { fg="#698BB8", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSTypeBuiltin"     ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSFuncBuiltin"     ,   { fg="#bab0ab", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSMethod"          ,   { fg="#8da0cb", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSConstant"        ,   { fg="#709081", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSConstructor"     ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSSymbol"          ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSBoolean"         ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSFloat"           ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSField"           ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSParameter"       ,   { fg="#B6819E", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSPunctDelimiter"  ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSConstBuiltin"    ,   { fg="#a0a0a0", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSKeywordFunction" ,   { fg="#B38376", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSVariableFunction",   { fg="#B38376", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSVariable"        ,   { fg="#d8dee9", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSInclude"         ,   { fg="#BC70A4", bg=nil, italic = false, bold = false, underline = false })
hl(0, "TSKeywordOperator" ,   { fg="#67CCDC", bg=nil, italic = true , bold = true , underline = false })

-- rainbow
hl(0, "rainbowcol1"       ,{ fg="#00A7CF", bg=nil, italic = false, bold = true, underline = false })
hl(0, "rainbowcol2"       ,{ fg="#E23D75", bg=nil, italic = false, bold = true, underline = false })
hl(0, "rainbowcol3"       ,{ fg="#CBAB65", bg=nil, italic = false, bold = true, underline = false })
hl(0, "rainbowcol4"       ,{ fg="#d08770", bg=nil, italic = false, bold = true, underline = false })
hl(0, "rainbowcol5"       ,{ fg="#ac547e", bg=nil, italic = false, bold = true, underline = false })
hl(0, "rainbowcol6"       ,{ fg="#1DAA89", bg=nil, italic = false, bold = true, underline = false })
hl(0, "rainbowcol7"       ,{ fg="#f781bf", bg=nil, italic = false ,bold = true, underline = false })

-- wilder.nvim
hl(0, "WildMenu"          ,{ fg="#000000", bg="#8F575A", italic = true,  bold = false, underline = false })
hl(0, "WildStatus"        ,{ fg="#c0c0c0", bg="#1A3A59", italic = false, bold = false, underline = false })
hl(0, "WildSelected"      ,{ fg="#c0c0c0", bg="#566696", italic = false, bold = false, underline = false })
hl(0, "WildSelectedAccent",{ fg="#FCCC82", bg="#566696", italic = false, bold = true , underline = false })
hl(0, "WildMode"          ,{ fg="#e0e0e0", bg="#8F575A", italic = true,  bold = false, underline = false })
hl(0, "WildSeparator"     ,{ fg="#bd93f9", bg="#1A3A59", italic = false, bold = false, underline = false })
hl(0, "WildAccent"        ,{ fg="#FA2C77", bg="#1A3A59", italic = false, bold = true , underline = false })
hl(0, "WildIndex"         ,{ fg="#FCCC82", bg="#1A3A59", italic = false, bold = false, underline = false })
hl(0, "WildSepLeft"       ,{ fg="#FCCC82", bg="#1A3A59", italic = false, bold = false, underline = false })
hl(0, "WildSepRight2"     ,{ fg="#FCCC82", bg="#1A3A59", italic = false, bold = false, underline = false })
hl(0, "WildSepLeft"       ,{ fg="#FCCC82", bg="#1A3A59", italic = false, bold = false, underline = false })
hl(0, "WildSepRight2"     ,{ fg="#FCCC82", bg="#1A3A59", italic = false, bold = false, underline = false })

hl(0, "VirtColumn",              { fg = colors.lightbg2, bg = colors.black })
hl(0, "TreesitterContext",       { bg = "#343848" })
hl(0, "iCursor" ,{ fg="#ff5555" ,bg="#ff5555" ,italic = false, bold = true, underline = false })
hl(0, "nCursor" ,{ fg="#e0e0e0" ,bg="#e0e0e0" ,italic = false, bold = true, underline = false })
hl(0, "vCursor" ,{ fg="#1bb1e7" ,bg="#1bb1e7" ,italic = false, bold = true, underline = false })
hl(0, "rCursor" ,{ fg="#d65b84" ,bg="#d65b84" ,italic = false, bold = true, underline = false })
hl(0, "oCursor" ,{ fg="#00ff00" ,bg="#00ff00" ,italic = false, bold = true, underline = false })

-- End of File
